geom_bar(stat = "identity", aes(fill = category))
library(dplyr)
library(ggplot2)
# Make data table
grades <- factor(c(1, 3, 1, 2, 3,
2,
2, 1, 1, 1, 1,
1, 1, 2, 3, 1,
1,
3, 1, 1, 1, 2,
2, 1, 2, 1, 1, 3,
1,
1, 2, 1, 1, 2,
1, 1, 1, 1, 1, 1,
1,
2, 2, 1, 1, 2, 1), labels = c("A", "A-", "B+"))
credits <- c(1, 1, .25, 1, 1,
1,
1, 1, .25, 1, 1,
1, .25, 1, 1, 1,
1,
1, 1, 1, .25, 1,
1, .25, 1, .5, .25, 1,
1,
1, 1, .5, .25, 1,
1, .25, 1, .5, .25, 1,
1,
1, .25, .5, .25, 1, 1)
year <- c(rep("Freshman", 11), rep("Sophomore", 11), rep("Junior", 12), rep("Senior", 13))
semester <- c(rep("Fall", 5), "Interim", rep("Spring", 5),
rep("Fall", 5), "Interim", rep("Spring", 5),
rep("Fall", 6), "Interim", rep("Spring", 5),
rep("Fall", 6), "Interim", rep("Spring", 6))
semester.num <- c(rep(1, 5), 1.333, rep(1.667, 5),
rep(2, 5), 2.333, rep(2.667, 5),
rep(3, 6), 3.333, rep(3.667, 5),
rep(4, 6), 4.333, rep(4.667, 6))
department <- c("GERM", "MATH", "PIANO", "PHYS", "WRIT",
"PHIL",
"ECON", "MATH", "PIANO", "PHYS", "REL",
"MATH", "PIANO", "PHYS", "PSYCH", "STAT",
"MUSIC",
"ENVST", "MATH", "MATH", "PIANO", "REL",
"ENGL", "ESAC", "MATH", "MSCS", "PIANO", "STAT",
"MATH",
"ID", "MATH", "MSCS", "PIANO", "STAT",
"CSCI", "ESAC", "MATH", "MSCS", "PIANO", "STAT",
"MATH",
"CSCI", "CSCI", "MSCS", "PIANO", "PHIL", "PSCI")
gpa <- data.frame(grades, credits, year, semester, semester.num, department)
gpnum <- data.frame(grades = c("A", "A-", "B+"), gp = c(4, 11/3, 10/3))
gpa <- left_join(gpa, gpnum, by = "grades")
yearnum <- data.frame(year = c("Freshman", "Sophomore", "Junior", "Senior"),
yearnum = c(1,2,3,4))
gpa <- left_join(gpa, yearnum, by = "year")
gpa <- gpa %>% mutate(points = gpa$gp * gpa$credits,
major = ifelse(department %in% c("MATH", "STAT", "CSCI", "MSCS"), "Y", "N"))
# By semester
gpa.sem <- gpa %>% group_by(year, semester, semester.num) %>%
summarize(points = sum(points), credits = sum(credits)) %>%
ungroup() %>%
arrange(semester.num) %>%
mutate(gpa = points/credits,
fullsem = factor(paste(year, semester)),
semtype = ifelse(semester == "Interim", "Interim", "Full"),
tot.points = cumsum(points), tot.credits = cumsum(credits),
tot.gpa = tot.points/tot.credits)
gpa.sem$fullsem = factor(gpa.sem$fullsem, levels = gpa.sem$fullsem)
ggplot(data = gpa.sem, aes(x = fullsem, y = gpa)) +
geom_bar(stat = "identity", aes(fill = semtype)) + #fill = "lightgrey") +
scale_fill_manual(values = c("darkgrey", "lightgrey")) +
geom_line(aes(y = tot.gpa, group = 1), color = "red") +
geom_point(aes(y = tot.gpa), color = "red") +
xlab("Semester") + ylab("GPA") + ggtitle("GPA by semester") + theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_cartesian(ylim = c(3.5, 4.05)) +
geom_hline(yintercept = 3.75, linetype = "dashed", color = "grey45") +
geom_hline(yintercept = 3.6, linetype = "dashed", color = "grey45") +
geom_hline(yintercept = 3.9, linetype = "dashed", color = "grey45")
preds <- read.csv(file = file.choose())
dim(preds)
library(ggplot2)
names(preds)
qplot(data = preds, x = PTS.per.36, y = Predicted.PTS)
cor(preds$PTS.per.36, preds$Predicted.PTS)
qplot(data = preds, x = TRB.per.36, y = Predicted.TRB)
qplot(data = preds, x = AST.per.36, y = Predicted.AST)
qplot(data = preds, x = X3P.per.36, y = Predicted.X3P)
qplot(data = preds, x = X3P.per.36, y = Predicted.X3P)
qplot(data = preds, x = X3P.percent, y = Predicted.3Percent)
qplot(data = preds, x = X3P.percent, y = Predicted.3percent)
qplot(data = preds, x = X2P.percent, y = Predicted.2percent)
qplot(data = preds, x = PTS.per.36, y = Predicted.PTS)
length(unique(preds$Player))
head(unique(preds$Player))
qplot(data = preds, x = STL.per.36, y = Predicted.STL)
filter(preds, STL.per.36 > 5)
library(dplyr)
filter(preds, STL.per.36 > 5)
View(filter(preds, Player = "Alvin Williams"))
View(filter(preds, Player == "Alvin Williams"))
help(order)
help(sort)
View(preds[order(preds$Predicted.PTS)])
View(preds[order(preds$Predicted.PTS),])
View(preds[order(preds$Predicted.PTS, decreasing = T),])
View(preds[order(preds$Predicted.PTS, decreasing = F),])
names(preds)
View(preds[order(preds$Predicted.AST, decreasing = T),])
View(preds[order(preds$Predicted.AST, decreasing = T),c("Player", "Predicted.AST")])
View(preds[order(preds$Predicted.AST, decreasing = T),
c("Player", "Predicted.AST", "AST.per.36")])
View(preds[order(preds$Predicted.AST, decreasing = F),
c("Player", "Predicted.AST", "AST.per.36")])
qplot(data = preds, x = AST.per.36, y = Predicted.AST)
View(preds[order(preds$Predicted.3percent, decreasing = F),
c("Player", "Predicted.3percent", "X3P.percent")])
View(preds[order(preds$Predicted.3percent, decreasing = T),
c("Player", "Predicted.3percent", "X3P.percent")])
View(preds[filter(order(preds$Predicted.3percent, decreasing = T),
c("Player", "Predicted.3percent", "X3P.percent", "Yrs")], Player == "Kyle Korver")
View(preds[filter(order(preds$Predicted.3percent, decreasing = T),
c("Player", "Predicted.3percent", "X3P.percent", "Yrs"), Player == "Kyle Korver")]
)
View(preds[dplyr::filter(order(preds$Predicted.3percent, decreasing = T),
c("Player", "Predicted.3percent", "X3P.percent", "Yrs"), Player == "Kyle Korver")]
)
View(dplyr::filter(preds[order(preds$Predicted.3percent, decreasing = T),
c("Player", "Predicted.3percent", "X3P.percent", "Yrs")], Player == "Kyle Korver"))
View(dplyr::filter(preds[order(preds$Predicted.3percent, decreasing = T),
c("Player", "Predicted.3percent", "X3P.percent", "Yrs")],
Player == "Stephen Curry"))
names(preds)
threes <- preds %>% group_by(Player) %>%
summarize(X3P = sum(X3PM.per.36*82), years = max(Yrs)) %>%
filter(Yrs > 3)
threes <- preds %>% group_by(Player) %>%
summarize(X3P = sum(X3PM.per.36*82), years = max(Yrs)) %>%
filter(years > 3)
dim(threes)
View(threes)
hist(threes$X3P)
hist(threes$X3P, bins = 30)
help(hist)
ggplot(data = preds, aes(x = X3P)) + geom_histogram()
ggplot(data = threes, aes(x = X3P)) + geom_histogram()
ggplot(data = threes, aes(x = X3P)) + geom_histogram(bins = 20)
ggplot(data = threes, aes(x = X3P)) + geom_histogram(binwidth = 200)
table(threes$X3P == 0)
table(threes$X3P == 1)
table(threes$X3P == 2)
table(threes$X3P == 3)
View(filter(threes, X3P < 20))
.1*82
View(filter(preds, Player == "Tim Duncan"))
names(preds)
help(readClipboard)
twins <- read.delim("clipboard")
twins <- read.delim("clipboard")
help(read.delim)
x <- read.delim(pipe(“pbpaste”))
x <- read.delim(pipe("pbpaste"))
head(x)
twins1 <- read.delim(pipe("pbpaste"))
head(twins1)
twins1 <- read.delim(pipe("pbpaste"))
head(twins1)
twins <- read.csv(file = file.choose())
View(twins)
wl <- twins$W.L
head(wl)
table(wl)
wl
wl <- twins$W.L[1:108]
wl
wl <- c(twins$W.L[1:108], "W")
wl <- wl[wl != "W/L"]
wl
wl <- c(twins$W.L[1:108], "W")
wl
wl <- twins$W.L[1:108]
wl
wl <- as.character(twins$W.L[1:108])
wl
wl <- c(as.character(twins$W.L[1:108]), "W")
wl
wl <- wl[wl != "W/L"]
wl
wl[wl == "W-wo"] <- "W"
wl[wl == "L-wo"] <- "L"
wl
table(wl)
help(table)
wl[(length(wl) - back):length(wl)]
back <- 10
wl[(length(wl) - back):length(wl)]
table(wl[(length(wl) - back + 1):length(wl)])
back <- 30; table(wl[(length(wl) - back + 1):length(wl)])
back <- 50; table(wl[(length(wl) - back + 1):length(wl)])
back <- 80; table(wl[(length(wl) - back + 1):length(wl)])
back <- 60; table(wl[(length(wl) - back + 1):length(wl)])
back <- 70; table(wl[(length(wl) - back + 1):length(wl)])
back <- 65; table(wl[(length(wl) - back + 1):length(wl)])
back <- 50; table(wl[(length(wl) - back + 1):length(wl)])
back <- 40; table(wl[(length(wl) - back + 1):length(wl)])
23/40
(23/40)*162
back <- 50; table(wl[(length(wl) - back + 1):length(wl)])
26/50*162
length(wl)
library(dplyr)
record <- data.frame(game = c(1:length(wl)), result = wl)
head(record)
record <- data.frame(game = c(1:length(wl)), result = wl) %>%
mutate(num = ifelse(wl == "W", 1, -1), net = cumsum(num))
head(record)
ggplot(data = record, aes(x = game, y = net)) + geom_line()
library(ggplot2)
ggplot(data = record, aes(x = game, y = net)) + geom_line()
which.min(record$net)
length(wl)
record$net[79]
record$net[length(record$net)]
107 - 79
back <- 28; table(wl[(length(wl) - back + 1):length(wl)])
record <- data.frame(game = c(1:length(wl)), result = wl) %>%
mutate(num = ifelse(wl == "W", 1, -1),
num0 = ifelse(wl == "W", 1, 0),
net = cumsum(num),
fiveh = game/2)
ggplot(data = record, aes(x = game, y = net)) + geom_line() +
geom_line(aes(x = game, y = fiveh), color = "red")
ggplot(data = record, aes(x = game, y = net0)) + geom_line() +
geom_line(aes(x = game, y = fiveh), color = "red")
record <- data.frame(game = c(1:length(wl)), result = wl) %>%
mutate(num = ifelse(wl == "W", 1, -1),
num0 = ifelse(wl == "W", 1, 0),
net = cumsum(num),
net0 = cumsum(num0),
fiveh = game/2)
ggplot(data = record, aes(x = game, y = net0)) + geom_line() +
geom_line(aes(x = game, y = fiveh), color = "red")
library(rvest)
library(data.table)
library(ggplot2)
library(tidyr)
library(plyr)
library(dplyr)
################
# JW functions #
################
runs.array.pitchers <- function(fullSeason.df, teamCol = "team", pitcherCol = "starter",
runsCol = "R", runsAgainstCol = "RA", opponentCol = "opp",
min.starts = 20) {
fullSeason.df <- as.data.frame(fullSeason.df) %>%
group_by_(pitcherCol) %>%
mutate(starts = n()) %>%
ungroup() %>%
mutate(pitcherID = ifelse(starts > min.starts, paste0(team, "-", starter), "Other"))
teamNames <- fullSeason.df[,teamCol][[1]] %>% unique()
pitcherNames <- unique(fullSeason.df$pitcherID)
maxRuns <- max(fullSeason.df[,runsCol])
# Basically a reference of all possible team/run matchups
all.matchups <- data.frame(team = rep(teamNames, each = length(pitcherNames)),
pitcher = rep(pitcherNames, length(teamNames)),
runs = rep(0:maxRuns, each = length(teamNames)*length(pitcherNames)),
stringsAsFactors = F)
names(all.matchups) <- c(teamCol, "pitcherID", runsAgainstCol)
res.mat <- fullSeason.df %>% group_by_(opponentCol, "pitcherID", runsAgainstCol) %>%
summarize(N = n())
names(res.mat) <- c(teamCol, "pitcherID", runsAgainstCol, "N")
res.mat <- right_join(res.mat, all.matchups, by = c(teamCol, "pitcherID", runsAgainstCol))
res.mat[is.na(res.mat)] <- 0
runs.arr <- array(res.mat$N, dim = c(length(pitcherNames), 30, maxRuns + 1),
dimnames = list(pitcherNames, teamNames, as.character(0:maxRuns))) %>%
aperm(perm = c(2, 1, 3))
return(runs.arr)
}
score.grad.2 <- function(teamVar, oppVars, maxRuns, freqSlice) {
runVec <- rep(1:maxRuns, each = length(oppVars))
oppVec <- rep(oppVars, maxRuns)
freqVec <- as.vector(freqSlice)
out.score <- sum(freqVec*(runVec/teamVar - oppVars))
return(out.score)
}
likelihood <- function(results.df, teams.df, pitchers.df) {
results.df <- as.data.frame(results.df)
teams.df <- as.data.frame(teams.df)
pitchers.df <- as.data.frame(pitchers.df) %>% mutate(name = factor(name))
full.df <- results.df %>% mutate(starter = ifelse(starter %in% pitchers.df$name, starter, "Other"),
opp = factor(opp), starter = factor(starter)) %>%
left_join(teams.df, by = c("opp" = "team")) %>%
rename(offense.score = score) %>%
left_join(pitchers.df, by = c("starter" = "name")) %>%
rename(pitcher.score = score) %>%
mutate(lambda = offense.score*pitcher.score, loglik = RA*log(lambda) - lambda - log(factorial(RA)))
return(sum(full.df$loglik))
}
jw.gradient.pitchers <- function(runs.arr, iterations = 1000, speed = .001, startVal = 1) {
runsList <- alply(runs.arr, 1)
runsAgainstList <- alply(runs.arr, 2)
R.scores <- matrix(0, nrow = 30, ncol = iterations)
RA.scores <- matrix(0, nrow = dim(runs.arr)[2], ncol = iterations)
R.scores[,1] <- startVal
RA.scores[,1] <- startVal
maxRuns <- dim(runs.arr)[3]
for (i in 2:iterations) {
if (i %% 100 == 0) {
print(i)
}
diff.means <- mean(R.scores[,i - 1]) - mean(RA.scores[,i - 1])
grad.Rs <- mapply(score.grad.2,
teamVar = R.scores[,i - 1],
freqSlice = runsList,
MoreArgs = list(oppVars = RA.scores[,i - 1], maxRuns = maxRuns)
) - (200/nrow(R.scores))*diff.means
R.scores[,i] <- R.scores[,i - 1] + speed*grad.Rs
grad.RAs <- mapply(score.grad.2,
teamVar = RA.scores[,i - 1],
freqSlice = runsAgainstList,
MoreArgs = list(oppVars = R.scores[,i - 1], maxRuns = maxRuns)
) + (200/nrow(RA.scores))*diff.means
RA.scores[,i] <- RA.scores[,i - 1] + speed*grad.RAs
team.scores <- data.frame(team = rownames(runs.arr),
score = R.scores[,iterations])
pitcher.scores <- data.frame(team = colnames(runs.arr),
score = RA.scores[,iterations],
starts = apply(runs.arr, 2, sum))
}
out.list <- list(team.scores = team.scores, pitcher.scores = pitcher.scores,
all.R = R.scores, all.RA = RA.scores)
return(out.list)
}
# Get season results data frame
setwd("/Users/jackwerner/Documents/My Stuff/Baseball/Team Rating System")
source("getSeasonResults.R")
MLBteams <- "/Users/jackwerner/Documents/My Stuff/Baseball/Team Rating System/MLBteams.csv"
year <- 2016
season.results <- getLeagueResults(year, MLBteams) %>% filter(!playoffs)
season.results$starter[season.results$starter == "A.Sanchez"] <-
ifelse(season.results$team[season.results$starter == "A.Sanchez"] == "TOR", "Aa.Sanchez", "An.Sanchez")
season.results$starter[season.results$starter == "C.Anderson"] <-
ifelse(season.results$team[season.results$starter == "C.Anderson"] == "MIL", "Ch.Anderson", "Co.Anderson")
its <- 10000
jw.results <- runs.array.pitchers(season.results) %>%
jw.gradient.pitchers(iterations = its, speed = .001, startVal = 2)
mle.R <- jw.results$all.R
mle.RA <- jw.results$all.RA
team.scores <- jw.results$team.scores
pitcher.scores <- jw.results$pitcher.scores
namesFunc <- function(char) {
spl <- strsplit(char, "-")
len <- length(spl[[1]])
return(spl[[1]][len])
}
pitcher.scores$name <- sapply(as.character(pitcher.scores$team), namesFunc)
pitcher.scores.final <- pitcher.scores %>% group_by(name) %>%
summarize(score = weighted.mean(score, starts))
# View scores
team.scores %>% arrange(desc(score)) %>% View()
pitcher.scores.final %>% arrange(score) %>% View()
# Log Likelihood
likelihood(season.results, team.scores, pitcher.scores.final)
# Check out the results
result.df <- data.frame(iteration = 1:its,
score = as.vector(t(mle.R)),
team = rep(team.scores$team, each = its))
ggplot(data = result.df, aes(x = iteration, y = score, color = team)) + geom_line()
mean(pitcher.scores.final$scores)
head(pitcher.scores.final)
head(pitcher.scores.final$scores)
mean(pitcher.scores.final$score)
mean(team.scores$score)
# Means
mean(team.scores$score)
mean(pitcher.scores.final$score)
runs.array.pitchers
pitcher.scores.20 <- pitcher.scores.final
team.scores.20 <- team.scores
jw.results <- runs.array.pitchers(season.results, min.starts = 15) %>%
jw.gradient.pitchers(iterations = its, speed = .001, startVal = 2)
mle.R <- jw.results$all.R
mle.RA <- jw.results$all.RA
team.scores <- jw.results$team.scores
pitcher.scores <- jw.results$pitcher.scores
namesFunc <- function(char) {
spl <- strsplit(char, "-")
len <- length(spl[[1]])
return(spl[[1]][len])
}
pitcher.scores$name <- sapply(as.character(pitcher.scores$team), namesFunc)
pitcher.scores.final <- pitcher.scores %>% group_by(name) %>%
summarize(score = weighted.mean(score, starts))
# View scores
team.scores %>% arrange(desc(score)) %>% View()
pitcher.scores.final %>% arrange(score) %>% View()
# Means
mean(team.scores$score)
mean(pitcher.scores.final$score)
pitcher.scores.15 <- pitcher.scores.final
team.scores.15 <- team.scores
head(pitcher.scores.15)
head(pitcher.scores.20)
pitcher.scores.full <- left_join(pitcher.scores.15, pitcher.scores.20, by = "name")
head(pitcher.scores.full)
head(team.scores.15)
team.scores.full <- left_join(team.scores.15, team.scores.20, by = "team")
head(team.scores.ful)
head(team.scores.full)
head(pitcher.scores.full)
ggplot(data = pitcher.scores.full, aes(x = score.x, y = score.y)) +
geom_point()
ggplot(data = team.scores.full, aes(x = score.x, y = score.y)) + geom_point()
lm(score.x ~ score.y, data = team.scores.full)
lm(score.x ~ score.y, data = pitcher.scores.full)
jw.results <- runs.array.pitchers(season.results, min.starts = 10) %>%
jw.gradient.pitchers(iterations = its, speed = .001, startVal = 2)
mle.R <- jw.results$all.R
mle.RA <- jw.results$all.RA
team.scores <- jw.results$team.scores
pitcher.scores <- jw.results$pitcher.scores
namesFunc <- function(char) {
spl <- strsplit(char, "-")
len <- length(spl[[1]])
return(spl[[1]][len])
}
pitcher.scores$name <- sapply(as.character(pitcher.scores$team), namesFunc)
pitcher.scores.final <- pitcher.scores %>% group_by(name) %>%
summarize(score = weighted.mean(score, starts))
# View scores
team.scores %>% arrange(desc(score)) %>% View()
pitcher.scores.final %>% arrange(score) %>% View()
# Means
mean(team.scores$score)
mean(pitcher.scores.final$score)
pitcher.scores.10 <- pitcher.scores.final
team.scores.10 <- team.scores
pitcher.scores.full <- left_join(pitcher.scores.10, pitcher.scores.20, by = "name")
team.scores.full <- left_join(team.scores.10, team.scores.20, by = "team")
ggplot(data = pitcher.scores.full, aes(x = score.x, y = score.y)) + geom_point()
ggplot(data = team.scores.full, aes(x = score.x, y = score.y)) + geom_point()
jw.results <- runs.array.pitchers(season.results, min.starts = 5) %>%
jw.gradient.pitchers(iterations = its, speed = .001, startVal = 2)
mle.R <- jw.results$all.R
mle.RA <- jw.results$all.RA
team.scores <- jw.results$team.scores
pitcher.scores <- jw.results$pitcher.scores
namesFunc <- function(char) {
spl <- strsplit(char, "-")
len <- length(spl[[1]])
return(spl[[1]][len])
}
pitcher.scores$name <- sapply(as.character(pitcher.scores$team), namesFunc)
pitcher.scores.final <- pitcher.scores %>% group_by(name) %>%
summarize(score = weighted.mean(score, starts))
# View scores
team.scores %>% arrange(desc(score)) %>% View()
pitcher.scores.final %>% arrange(score) %>% View()
# Means
mean(team.scores$score)
mean(pitcher.scores.final$score)
pitcher.scores.5 <- pitcher.scores.final
team.scores.5 <- team.scores
pitcher.scores.full <- left_join(pitcher.scores.5, pitcher.scores.20, by = "name")
team.scores.full <- left_join(team.scores.5, team.scores.20, by = "team")
ggplot(data = pitcher.scores.full, aes(x = score.x, y = score.y)) + geom_point()
ggplot(data = team.scores.full, aes(x = score.x, y = score.y)) + geom_point()
head(pitcher.scores.full)
psna <- filter(pitcher.scores.full, is.na(score.y))
hist(psna$score.x)
psna %>% arrange(score.x) %>% View
pitcher.scores.full %>% arrange(score) %>% View
pitcher.scores.full %>% arrange(score.x) %>% View
pitcher.scores.full <- left_join(pitcher.scores.5, pitcher.scores.10, by = "name")
head(pitcher.scores.full)
hist.df <- pitcher.scores.full %>% filter(is.na(score.y))
ggplot(data = hist.df, aes(x = score.x))
ggplot(data = hist.df, aes(x = score.x)) + geom_histogram()
ggplot(data = hist.df, aes(x = score.x)) + geom_histogram(binwidth = .25)
ggplot(data = hist.df, aes(x = score.x)) + geom_histogram(binwidth = .25, fill = "white")
ggplot(data = hist.df, aes(x = score.x)) + geom_histogram(binwidth = .25, fill = "white", color = "black")
pitcher.scores.full <- left_join(pitcher.scores.10, pitcher.scores.15, by = "name")
hist.df <- pitcher.scores.full %>% filter(is.na(score.y))
ggplot(data = hist.df, aes(x = score.x)) + geom_histogram(binwidth = .25, fill = "white", color = "black")
pitcher.scores.full <- left_join(pitcher.scores.15, pitcher.scores.20, by = "name")
hist.df <- pitcher.scores.full %>% filter(is.na(score.y))
ggplot(data = hist.df, aes(x = score.x)) + geom_histogram(binwidth = .25, fill = "white", color = "black")
hist(pitcher.scores.20$score.x)
head(pitcher.scores.20)
hist(pitcher.scores.20$score)
hist(pitcher.scores.15$score)
hist(pitcher.scores.10$score)
hist(pitcher.scores.5$score)
##########
# Set up #
##########
setwd("/Users/jackwerner/Documents/My Stuff/Baseball/Team Rating System")
source("getSeasonResults.R")
source("JWPitchers.R")
MLBteams <- "/Users/jackwerner/Documents/My Stuff/Baseball/Team Rating System/MLBteams.csv"
##############
# Get scores #
##############
year <- 2016
season.results <- getLeagueResults(year, MLBteams) %>% filter(!playoffs)
season.results$starter[season.results$starter == "A.Sanchez"] <-
ifelse(season.results$team[season.results$starter == "A.Sanchez"] == "TOR", "Aa.Sanchez", "An.Sanchez")
season.results$starter[season.results$starter == "C.Anderson"] <-
ifelse(season.results$team[season.results$starter == "C.Anderson"] == "MIL", "Ch.Anderson", "Co.Anderson")
its <- 10000
jw.results <- runs.array.pitchers(season.results, min.starts = 0) %>%
jw.gradient.pitchers(iterations = its, speed = .001, startVal = 2)
